summary(FEveLM_Pmgkg)
FEveLM_PCA1_temp = lm(FEve ~ PCA1_temp, data = df_var)
summary(FEveLM_PCA1_temp)
FEveLM_minDHr = lm(FEve ~ minDHr, data = df_var)
summary(FEveLM_minDHr)
# Check the adjustment of the complete model
FEveLM_all = lm(FEve ~ Cnratio + Pmgkg + PCA1_temp + minDHr + AGC, data = df_var)
summary (FEveLM_all)
coef(FEveLM_all)
car::vif(FEveLM_all)
# Plot of prediected values vs residuals
residual = residuals(FEveLM_all)
preds = predict(FEveLM_all)
plot(residual ~  preds, xlab = "Predicted Values",  ylab = "Residuals")
plot_pred_vs_res <- plot(residual ~  preds, xlab = "Predicted Values",  ylab = "Residuals")
pearson.test(residual)
lillie.test(residual)
# Plot of the complete linear regression model
plot_comp_model <- plot(FEveLM_all)
# Plot results of linear regression models
par(mfrow = c(2, 2))
plot_comp_model <- plot(FEveLM_all)
# Plot results of linear regression models
par(mfrow = c(2, 3))
plot_comp_model <- plot(FEveLM_all)
# Plot results of linear regression models
par(mfrow = c(3, 2))
plot_comp_model <- plot(FEveLM_all)
# Plot results of linear regression models
par(mfrow = c(2, 2))
plot_comp_model <- plot(FEveLM_all)
plot_comp_model
plot_comp_model <- plot(FEveLM_all)
plot_comp_model
plot_pred_vs_res
# Plot of predicted values vs residuals
plot(residual ~  preds, xlab = "Predicted Values",  ylab = "Residuals")
# Plot of predicted values vs residuals
par(mfrow = c(1, 1))
plot(residual ~  preds, xlab = "Predicted Values",  ylab = "Residuals")
op = par(no.readonly = TRUE)
par(op)
View(op)
# Plot results of the complete linear regression model
par(mfrow = c(2, 2))
plot(FEveLM_all)
op = par(no.readonly = TRUE)
par(op)
plot(residual ~  preds, xlab = "Predicted Values",  ylab = "Residuals")
# Plot of predicted values vs residuals
par(mfrow = c(1, 1))
plot(residual ~  preds, xlab = "Predicted Values",  ylab = "Residuals")
# Plot results of the complete linear regression model
par(mfrow = c(2, 2))
plot(FEveLM_all)
# Set graphical parameters by a subsequent par() call
op = par(no.readonly = TRUE)
par(op)
# Obtain predicted values and residuals, and some tests
residual = residuals(FEveLM_all)
preds = predict(FEveLM_all)
plot(residual ~  preds, xlab = "Predicted Values",  ylab = "Residuals")
lmtest::bptest(FEveLM_all)
lmtest::bptest(FEveLM_all)
search <- step(FEveLM_all, ~.^2)
View(search)
library(MASS)
# Select the best model: stepwise, backwise and both of them with function stepAIC
stepAIC(FEveLM, direction = c("both", "backward", "forward"))
# Select the best model: stepwise, backwise and both of them with function stepAIC
stepAIC(FEveLM_all, direction = c("both", "backward", "forward"))
# Select the best model: stepwise, backwise and both of them with function stepAIC
FEveLM_all_best_model <- stepAIC(FEveLM_all, direction = c("both", "backward", "forward"))
FEveLM_all_best_model
# Run the generalized linear model with FEve ~ Cnratio + PCA1_temp + AGC
FEveGLM_all = glm(FEve ~ Cnratio + PCA1_temp + AGC, data = veg, family = gaussian())
# Run the generalized linear model with FEve ~ Cnratio + PCA1_temp + AGC
FEveGLM_all = glm(FEve ~ Cnratio + PCA1_temp + AGC, data = df_var,
family = gaussian())
summary (FEveGLM_all)
# Plot results of the complete general linear regression model
plot(FEveGLM_all)
FEveGLM_all
plot(FEveGLM_all)
# Plot results of the complete linear regression model
par(mfrow = c(2, 2))
plot(FEveLM_all)
# Plot of predicted values vs residuals
par(mfrow = c(1, 1))
plot(residual ~  preds, xlab = "Predicted Values",  ylab = "Residuals")
# Plot results of the complete general linear regression model
par(mfrow = c(1, 1))
plot(FEveGLM_all)
# Run the generalized linear model with FEve ~ Cnratio + PCA1_temp + AGC
FEveGLM_all = glm(FEve ~ Cnratio + PCA1_temp + AGC, data = df_var,
family = gaussian())
summary (FEveGLM_all)
# Plot results of the complete general linear regression model
par(mfrow = c(2, 2))
plot(FEveGLM_all)
plot(FEveGLM_all)
# Plot of predicted values vs residuals
par(mfrow = c(1, 1))
plot(residual ~  preds, xlab = "Predicted Values",  ylab = "Residuals")
# Plot results of the complete general linear regression model
par(mfrow = c(2, 2))
plot(FEveGLM_all)
# Obtain predicted values and residuals, and some tests
residual = residuals(FEveGLM_all)
# Obtain predicted values and residuals, and some tests
residuals_glm = residuals(FEveGLM_all)
preds_glm = predict(FEveGLM_all)
pearson.test(residuals_glm)
lillie.test(residuals_glm)
# Plot of predicted values vs residuals
par(mfrow = c(1, 1))
plot(residuals_glm ~ preds_glm, xlab = "Predicted Values",  ylab = "Residuals")
plot(residual ~  preds, xlab = "Predicted Values",  ylab = "Residuals")
# Plot results of the complete general linear regression model
par(mfrow = c(2, 2))
plot(FEveGLM_all)
# Plot of predicted values vs residuals
par(mfrow = c(1, 1))
plot(residuals_glm ~ preds_glm, xlab = "Predicted Values",  ylab = "Residuals")
# Test null model
FEve_nullLM <- lm(FEve ~ 1, data = df_var)
summary (FEve_nullLM)
stepAIC(FEve_nullLM)
library(glmulti)
install.packages("glmulti")
library(glmulti)
install.packages("glmulti")
install.packages("rJava")
install.packages("rJava")
install.packages("glmulti")
#Select the best model: stepwise, backwise and both of them with glmulti function
glmulti_FEve = glmulti(FEve ~ Cnratio + Pmgkg + PCA1_temp + minDHr + AGC ,
data = df_var, level = 1, method = "h", crit = "aic",
confsetsize = 100, plotty = F, report = T,
fitfunction = "glm")
library(glmulti) # this package requires rJava
#Select the best model: stepwise, backwise and both of them with glmulti function
FEve_glmulti = glmulti(FEve ~ Cnratio + Pmgkg + PCA1_temp + minDHr + AGC ,
data = df_var, level = 1, method = "h", crit = "aic",
confsetsize = 100, plotty = F, report = T,
fitfunction = "glm")
coef(FEve_glmulti)
FEve_glmulti
coef(FEve_glmulti)
print(FEve_glmulti)
# Obtain the best models (aic + 2)
tmp = weightable(FEve_glmulti)
tmp = tmp[tmp$aic <= min(tmp$aic) + 2,]
tmp
# Obtain the best models (aic + 2)
best_models1_glm = weightable(FEve_glmulti)
best_models1_glm = tmp[tmp$aic <= min(tmp$aic) + 2,]
# Check the best model to obtain beta, SE, and p value
summary(FEve_glmulti@objects[[1]])
# Check relationships between Feve and other variables
FDivLM_AGC = lm(FDiv ~ AGC, data = df_var)
summary(FDivLM_AGC)
FDivLM_Cnratio = lm(FDiv ~ Cnratio, data = df_var)
summary(FDivLM_Cnratio)
FDivLM_Pmgkg = lm(FDiv ~ Pmgkg, data = df_var)
summary(FDivLM_Pmgkg)
FDivLM_PCA1_temp = lm(FDiv ~ PCA1_temp, data = df_var)
summary(FDivLM_PCA1_temp)
FDivLM_minDHr = lm(FDiv ~ minDHr, data = df_var)
summary(FDivLM_minDHr)
# Run the complete model
FDivLM_all = lm(FDiv ~ Cnratio + Pmgkg + PCA1_temp + minDHr + AGC, data = df_var)
# Check the adjustment of the complete model
summary(FDivLM_all)
coef(FDivLM_all)
car::vif(FDivLM_all)
# Plot results of the complete linear regression model
par(mfrow = c(2, 2))
plot(FDivLM_all)
# Obtain predicted values and residuals, and some tests
FDivLM_all_residual_ = residuals(FDivLM_all)
FDivLM_all_preds = predict(FDivLM_all)
pearson.test(FDivLM_all_residual_)
# Obtain predicted values and residuals, and some tests
FDivLM_all_residual = residuals(FDivLM_all)
FDivLM_all_preds = predict(FDivLM_all)
pearson.test(FDivLM_all_residual)
lillie.test(FDivLM_all_residual)
lmtest::bptest(FDivLM_all)
search <- step(FDivLM_all, ~.^2)
plot(FDivLM_all_residual ~  FDivLM_all_preds, xlab = "Predicted Values",  ylab = "Residuals")
# Plot of predicted values vs residuals
par(mfrow = c(1, 1))
plot(FDivLM_all_residual ~  FDivLM_all_preds, xlab = "Predicted Values",  ylab = "Residuals")
# Select the best model: stepwise, backwise and both of them with stepAIC function
FDivLM_all_best_model <- stepAIC(FDivLM_all, direction = c("both", "backward", "forward"))
# Plot results of the complete general linear regression model
par(mfrow <- c(2, 2))
plot(FEveGLM_all)
par(mfrow = c(2, 2))
plot(FEveGLM_all)
# Plot results of the complete general linear regression model
par(mfrow = c(2, 2))
plot(FEveGLM_all)
# Plot results of the complete linear regression model
par(mfrow = c(2, 2))
plot(FDivLM_all)
# Obtain predicted values and residuals, and some tests
FDivLM_all_residual <- residuals(FDivLM_all)
FDivLM_all_preds <- predict(FDivLM_all)
pearson.test(FDivLM_all_residual)
lillie.test(FDivLM_all_residual)
lmtest::bptest(FDivLM_all)
search <- step(FDivLM_all, ~.^2)
# Plot of predicted values vs residuals
par(mfrow = c(1, 1))
plot(FDivLM_all_residual ~  FDivLM_all_preds, xlab = "Predicted Values",  ylab = "Residuals")
# Select the best model: stepwise, backwise and both of them with stepAIC function
FDivLM_all_best_model <- stepAIC(FDivLM_all, direction = c("both", "backward", "forward"))
# Test null model of linear model
FDiv_nullLM <- lm(FDiv ~ 1, data = df_var)
summary(FDiv_nullLM)
stepAIC(FDiv_nullLM)
# Run the generalized linear model with FDiv ~ Cnratio + PCA1_temp + AGC
FDivGLM_all <- glm(FDiv ~ Cnratio + PCA1_temp + AGC, data = df_var,
family = gaussian())
summary(FDivGLM_all)
# Plot results of the complete general linear regression model
par(mfrow = c(2, 2))
plot(FDivGLM_all)
# Obtain predicted values and residuals, and some tests
residuals_FDivglm <- residuals(FDivGLM_all)
preds_FDivglm <- predict(FDivGLM_all)
pearson.test(residuals_FDivglm)
lillie.test(residuals_FDivglm)
# Plot of predicted values vs residuals
par(mfrow = c(1, 1))
plot(residuals_FDivglm ~ preds_FDivglm, xlab = "Predicted Values",  ylab = "Residuals")
#Select the best model: stepwise, backwise and both of them with glmulti function
FDiv_glmulti = glmulti(FDiv ~ Cnratio + Pmgkg + PCA1_temp + minDHr + AGC ,
data = df_var, level = 1, method = "h", crit = "aic",
confsetsize = 100, plotty = F, report = T,
fitfunction = "glm")
#Select the best model: stepwise, backwise and both of them with glmulti function
FDiv_glmulti = glmulti(FDiv ~ Cnratio + Pmgkg + PCA1_temp + minDHr + AGC ,
data = df_var, level = 1, method = "h", crit = "aic",
confsetsize = 100, plotty = F, report = T,
fitfunction = "lm")
#Select the best model: stepwise, backwise and both of them with glmulti function
FDiv_glmulti = glmulti(FDiv ~ Cnratio + Pmgkg + PCA1_temp + minDHr + AGC ,
data = df_var, level = 1, method = "h", crit = "aic",
confsetsize = 100, plotty = F, report = T,
fitfunction = "lm")
FDiv_glmulti
#Select the best model: stepwise, backwise and both of them with glmulti function
FDiv_glmulti = glmulti(FDiv ~ Cnratio + Pmgkg + PCA1_temp + minDHr + AGC ,
data = df_var, level = 1, method = "h", crit = "aic",
confsetsize = 100, plotty = F, report = T,
fitfunction = "lm")
#Select the best model: stepwise, backwise and both of them with glmulti function
FDiv_glmulti = glmulti(FDiv ~ Cnratio + Pmgkg + PCA1_temp + minDHr + AGC ,
data = df_var, level = 1, method = "h", crit = "aic",
confsetsize = 100, plotty = F, report = T,
fitfunction = "glm")
# Obtain the best models (aic + 2)
best_models2_glm = weightable(FDiv_glmulti)
best_models2_glm = tmp[tmp$aic <= min(tmp$aic) + 2,]
best_models2_glm
# Check the best model to obtain beta, SE, and p value
summary(FDiv_glmulti@objects[[1]])
# Check relationships between FRic and other variables
FRicLM_AGC <- lm(FRic ~ AGC, data = df_var)
summary(FRicLM_AGC)
FRicLM_Cnratio <- lm(FRic ~ Cnratio, data = df_var)
summary(FRicLM_Cnratio)
FRicLM_Pmgkg <- lm(FRic ~ Pmgkg, data = df_var)
summary(FRicLM_Pmgkg)
FRicLM_PCA1_temp <- lm(FRic ~ PCA1_temp, data = df_var)
summary(FRicLM_PCA1_temp)
FRicLM_minDHr <- lm(FRic ~ minDHr, data = df_var)
summary(FRicLM_minDHr)
# Run the complete model
FRicLM_all <- lm(FRic ~ Cnratio + Pmgkg + PCA1_temp + minDHr + AGC, data = df_var)
# Check the adjustment of the complete model
summary(FRicLM_all)
coef(FRicLM_all)
car::vif(FRicLM_all)
# Plot results of the complete linear regression model
par(mfrow = c(2, 2))
plot(FRicLM_all)
# Obtain predicted values and residuals, and some tests
FRicLM_all_residual <- residuals(FRicLM_all)
FRicLM_all_preds <- predict(FRicLM_all)
pearson.test(FRicLM_all_residual)
lillie.test(FRicLM_all_residual)
lmtest::bptest(FRicLM_all)
search <- step(FRicLM_all, ~.^2)
# Plot of predicted values vs residuals
par(mfrow = c(1, 1))
plot(FRicLM_all_residual ~ FRicLM_all_preds, xlab = "Predicted Values",  ylab = "Residuals")
# Select the best model: stepwise, backwise and both of them with stepAIC function
FRicLM_all_best_model <- stepAIC(FRicLM_all, direction = c("both", "backward", "forward"))
# Test null model of linear model
FRic_nullLM <- lm(FRic ~ 1, data = df_var)
summary(FRic_nullLM)
stepAIC(FRic_nullLM)
# Run the generalized linear model with FRic ~ Cnratio + PCA1_temp + AGC
FRicGLM_all <- glm(FRic ~ Cnratio + PCA1_temp + AGC, data = df_var,
family = gaussian())
summary(FRicGLM_all)
# Plot results of the complete general linear regression model
par(mfrow = c(2, 2))
plot(FRicGLM_all)
# Obtain predicted values and residuals, and some tests
residuals_FRicglm <- residuals(FRicGLM_all)
preds_FRicglm <- predict(FRicGLM_all)
pearson.test(residuals_FRicglm)
lillie.test(residuals_FRicglm)
# Plot of predicted values vs residuals
par(mfrow = c(1, 1))
plot(residuals_FRicglm ~ preds_FRicglm, xlab = "Predicted Values",  ylab = "Residuals")
#Select the best model: stepwise, backwise and both of them with glmulti function
FRic_glmulti = glmulti(FRic ~ Cnratio + Pmgkg + PCA1_temp + minDHr + AGC ,
data = df_var, level = 1, method = "h", crit = "aic",
confsetsize = 100, plotty = F, report = T,
fitfunction = "glm")
# Obtain the best models (aic + 2)
best_models3_glm = weightable(FRic_glmulti)
best_models3_glm = tmp[tmp$aic <= min(tmp$aic) + 2,]
# Check the best model to obtain beta, SE, and p value
summary(FRic_glmulti@objects[[1]])
# Run the complete model
FDisLM_all <- lm(FDis ~ Cnratio + Pmgkg + PCA1_temp + minDHr + AGC, data = df_var)
# Check the adjustment of the complete model
summary(FDisLM_all)
coef(FDisLM_all)
car::vif(FDisLM_all)
# Plot results of the complete linear regression model
par(mfrow = c(2, 2))
plot(FDisLM_all)
# Obtain predicted values and residuals, and some tests
FDisLM_all_residual <- residuals(FDisLM_all)
FDisLM_all_preds <- predict(FDisLM_all)
pearson.test(FDisLM_all_residual)
lillie.test(FDisLM_all_residual)
lmtest::bptest(FDisLM_all)
search <- step(FDisLM_all, ~.^2)
# Plot of predicted values vs residuals
par(mfrow = c(1, 1))
plot(FDisLM_all_residual ~ FDisLM_all_preds, xlab = "Predicted Values",  ylab = "Residuals")
# Select the best model: stepwise, backwise and both of them with stepAIC function
FDisLM_all_best_model <- stepAIC(FDisLM_all, direction = c("both", "backward", "forward"))
# Test null model of linear model
FDis_nullLM <- lm(FDis ~ 1, data = df_var)
summary(FDis_nullLM)
stepAIC(FDis_nullLM)
# Run the generalized linear model with FDis ~ Cnratio + PCA1_temp + AGC
FDisGLM_all <- glm(FDis ~ Cnratio + PCA1_temp + AGC, data = df_var,
family = gaussian())
summary(FDisGLM_all)
# Plot results of the complete general linear regression model
par(mfrow = c(2, 2))
plot(FDisGLM_all)
# Obtain predicted values and residuals, and some tests
residuals_FDisglm <- residuals(FDisGLM_all)
preds_FDisglm <- predict(FDisGLM_all)
pearson.test(residuals_FDisglm)
lillie.test(residuals_FDisglm)
# Plot of predicted values vs residuals
par(mfrow = c(1, 1))
plot(residuals_FDisglm ~ preds_FDisglm, xlab = "Predicted Values",  ylab = "Residuals")
#Select the best model: stepwise, backwise and both of them with glmulti function
FDis_glmulti = glmulti(FDis ~ Cnratio + Pmgkg + PCA1_temp + minDHr + AGC ,
data = df_var, level = 1, method = "h", crit = "aic",
confsetsize = 100, plotty = F, report = T,
fitfunction = "glm")
# Obtain the best models (aic + 2)
best_models4_glm = weightable(FDis_glmulti)
best_models4_glm = tmp[tmp$aic <= min(tmp$aic) + 2,]
# Check the best model to obtain beta, SE, and p value
summary(FDis_glmulti@objects[[1]])
# Run the complete model
HillDivLM_all <- lm(FDis ~ Cnratio + Pmgkg + PCA1_temp + minDHr + AGC, data = df_var)
# Check the adjustment of the complete model
summary(FDisLM_all)
# Check the adjustment of the complete model
summary(HillDivLM_all)
coef(HillDivLM_all)
car::vif(HillDivLM_all)
# Plot results of the complete linear regression model
par(mfrow = c(2, 2))
plot(HillDivLM_all)
# Obtain predicted values and residuals, and some tests
HillDivLM_all_residual <- residuals(HillDivLM_all)
HillDivLM_all_preds <- predict(HillDivLM_all)
pearson.test(HillDivLM_all_residual)
lillie.test(HillDivLM_all_residual)
lmtest::bptest(HillDivLM_all)
search <- step(HillDivLM_all, ~.^2)
# Plot of predicted values vs residuals
par(mfrow = c(1, 1))
plot(HillDivLM_all_residual ~ HillDivLM_all_preds, xlab = "Predicted Values",  ylab = "Residuals")
# Select the best model: stepwise, backwise and both of them with stepAIC function
HillDivLM_all_best_model <- stepAIC(HillDivLM_all, direction = c("both", "backward", "forward"))
# Test null model of linear model
HillDiv_nullLM <- lm(FDis ~ 1, data = df_var)
summary(HillDiv_nullLM)
stepAIC(HillDiv_nullLM)
# Run the complete model
HillDivLM_all <- lm(Hill_Diversity ~ Cnratio + Pmgkg + PCA1_temp + minDHr + AGC, data = df_var)
# Check the adjustment of the complete model
summary(HillDivLM_all)
coef(HillDivLM_all)
car::vif(HillDivLM_all)
# Plot results of the complete linear regression model
par(mfrow = c(2, 2))
plot(HillDivLM_all)
# Obtain predicted values and residuals, and some tests
HillDivLM_all_residual <- residuals(HillDivLM_all)
HillDivLM_all_preds <- predict(HillDivLM_all)
pearson.test(HillDivLM_all_residual)
lillie.test(HillDivLM_all_residual)
lmtest::bptest(HillDivLM_all)
search <- step(HillDivLM_all, ~.^2)
# Plot of predicted values vs residuals
par(mfrow = c(1, 1))
plot(HillDivLM_all_residual ~ HillDivLM_all_preds, xlab = "Predicted Values",  ylab = "Residuals")
# Select the best model: stepwise, backwise and both of them with stepAIC function
HillDivLM_all_best_model <- stepAIC(HillDivLM_all, direction = c("both", "backward", "forward"))
# Test null model of linear model
HillDiv_nullLM <- lm(Hill_Diversity ~ 1, data = df_var)
summary(HillDiv_nullLM)
stepAIC(HillDiv_nullLM)
# Run the generalized linear model with FDis ~ Cnratio + PCA1_temp + AGC
HillDivGLM_all <- glm(Hill_Diversity ~ Cnratio + PCA1_temp + AGC, data = df_var,
family = gaussian())
summary(HillDivGLM_all)
# Plot results of the complete general linear regression model
par(mfrow = c(2, 2))
plot(HillDivGLM_all)
# Obtain predicted values and residuals, and some tests
residuals_HillDivglm <- residuals(HillDivGLM_all)
preds_HillDivglm <- predict(HillDivGLM_all)
pearson.test(residuals_HillDivglm)
lillie.test(residuals_HillDivglm)
# Plot of predicted values vs residuals
par(mfrow = c(1, 1))
plot(residuals_HillDivglm ~ preds_HillDivglm, xlab = "Predicted Values",  ylab = "Residuals")
#Select the best model: stepwise, backwise and both of them with glmulti function
HillDiv_glmulti = glmulti(Hill_Diversity ~ Cnratio + Pmgkg + PCA1_temp + minDHr + AGC,
data = df_var, level = 1, method = "h", crit = "aic",
confsetsize = 100, plotty = F, report = T,
fitfunction = "glm")
# Obtain the best models (aic + 2)
best_models5_glm = weightable(HillDiv_glmulti)
best_models5_glm = best_models5_glm[best_models5_glm$aic <= min(best_models5_glm$aic) + 2,]
best_models5_glm
# Check the best model to obtain beta, SE, and p value
summary(HillDiv_glmulti@objects[[1]])
# Run the complete model
HillDivLM_all <- lm(Hill_Diversity ~ Cnratio + Pmgkg + PCA1_temp + minDHr + AGC, data = df_var)
# Check the adjustment of the complete model
summary(HillDivLM_all)
coef(HillDivLM_all)
car::vif(HillDivLM_all)
# Plot results of the complete linear regression model
par(mfrow = c(2, 2))
plot(HillDivLM_all)
# Obtain predicted values and residuals, and some tests
HillDivLM_all_residual <- residuals(HillDivLM_all)
HillDivLM_all_preds <- predict(HillDivLM_all)
pearson.test(HillDivLM_all_residual)
lillie.test(HillDivLM_all_residual)
lmtest::bptest(HillDivLM_all)
search <- step(HillDivLM_all, ~.^2)
# Plot of predicted values vs residuals
par(mfrow = c(1, 1))
plot(HillDivLM_all_residual ~ HillDivLM_all_preds, xlab = "Predicted Values",
ylab = "Residuals")
# Select the best model: stepwise, backwise and both of them with stepAIC function
HillDivLM_all_best_model <- stepAIC(HillDivLM_all, direction = c("both",
"backward",
"forward"))
# Test null model of linear model
HillDiv_nullLM <- lm(Hill_Diversity ~ 1, data = df_var)
summary(HillDiv_nullLM)
stepAIC(HillDiv_nullLM)
# Run the generalized linear model with FDis ~ Cnratio + PCA1_temp + AGC
HillDivGLM_all <- glm(Hill_Diversity ~ Cnratio + PCA1_temp + AGC, data = df_var,
family = gaussian())
summary(HillDivGLM_all)
# Plot results of the complete general linear regression model
par(mfrow = c(2, 2))
plot(HillDivGLM_all)
# Obtain predicted values and residuals, and some tests
residuals_HillDivglm <- residuals(HillDivGLM_all)
preds_HillDivglm <- predict(HillDivGLM_all)
pearson.test(residuals_HillDivglm)
lillie.test(residuals_HillDivglm)
# Plot of predicted values vs residuals
par(mfrow = c(1, 1))
plot(residuals_HillDivglm ~ preds_HillDivglm, xlab = "Predicted Values",  ylab = "Residuals")
#Select the best model: stepwise, backwise and both of them with glmulti function
HillDiv_glmulti = glmulti(Hill_Diversity ~ Cnratio + Pmgkg + PCA1_temp + minDHr + AGC,
data = df_var, level = 1, method = "h", crit = "aic",
confsetsize = 100, plotty = F, report = T,
fitfunction = "glm")
# Obtain the best models (aic + 2)
best_models5_glm = weightable(HillDiv_glmulti)
best_models5_glm = best_models5_glm[best_models5_glm$aic <= min(best_models5_glm$aic) + 2,]
# Check the best model to obtain beta, SE, and p value
summary(HillDiv_glmulti@objects[[1]])
